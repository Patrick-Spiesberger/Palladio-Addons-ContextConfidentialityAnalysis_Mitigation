package edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability;

import java.util.List;
import java.util.Optional;

import org.eclipse.emf.ecore.EObject;
import org.palladiosimulator.pcm.confidentiality.attacker.analysis.common.HelperCreationCompromisedElements;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.Attacker;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.Vulnerability;
import org.palladiosimulator.pcm.resourceenvironment.LinkingResource;

import edu.kit.ipd.sdq.kamp4attack.model.modificationmarks.KAMP4attackModificationmarks.CompromisedLinkingResource;

public class VulnerabilityHandlingLinkingResource extends VulnerabilityHandling<CompromisedLinkingResource> {

    @Override
    protected Optional<CompromisedLinkingResource> handleTakeOver(final EObject element, final EObject source,
            final Vulnerability vulnerability) {
        if (element instanceof LinkingResource) {
            final var linking = HelperCreationCompromisedElements.createCompromisedLinking((LinkingResource) element,
                    List.of(source, vulnerability));
            return Optional.of(linking);
        }
        throw new IllegalStateException("Wrong datatype" + this);
    }

    @Override
    protected void handleConfidentiality(final EObject container, Attacker attacker) {
        // for further extensions
    }

}
